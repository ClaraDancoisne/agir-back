// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Suivi {
  id              String      @id
  type            String
  attributs       String[]    @default([])
  valeurs         String[]    @default([])
  computed_impact Boolean     @default(false)
  created_at      DateTime    @default(now())
  updated_at      DateTime    @updatedAt
  utilisateurId   String
  utilisateur     Utilisateur @relation(fields: [utilisateurId], references: [id])
}

model Utilisateur {
  id           String        @id
  name         String
  points       Int           @default(0)
  empreintes   Empreinte[]
  interactions Interaction[]
  suivis       Suivi[]
  badges       Badge[]
  created_at   DateTime      @default(now())
  updated_at   DateTime      @default(now()) @updatedAt
}

model Interaction {
  id            String      @id
  content_id    String?
  type          String
  titre         String
  soustitre     String?
  categorie     String
  tags          String[]    @default([])
  duree         String?
  frequence     String?
  image_url     String?
  url           String?
  seen          Int         @default(0)
  seen_at       DateTime?
  clicked       Boolean     @default(false)
  clicked_at    DateTime?
  done          Boolean     @default(false)
  done_at       DateTime?
  succeeded     Boolean     @default(false)
  succeeded_at  DateTime?
  difficulty    Int         @default(1)
  points        Int         @default(0)
  reco_score    Int         @default(1000)
  created_at    DateTime    @default(now())
  updated_at    DateTime    @updatedAt
  utilisateurId String
  utilisateur   Utilisateur @relation(fields: [utilisateurId], references: [id])
}

model Empreinte {
  id            String      @id
  initial       Boolean     @default(true)
  situation     String
  created_at    DateTime    @default(now())
  updated_at    DateTime    @default(now())
  utilisateur   Utilisateur @relation(fields: [utilisateurId], references: [id])
  utilisateurId String
}

model Quizz {
  id        String          @id
  titre     String
  questions QuizzQuestion[]
}

model QuizzQuestion {
  id                      String   @id
  libelle                 String
  propositions            String[]
  solution                String
  texte_riche_explication String   @default("")
  quizz                   Quizz    @relation(fields: [quizzId], references: [id])
  quizzId                 String
}

model Badge {
  id            String       @id
  type          String       @unique
  titre         String
  Utilisateur   Utilisateur? @relation(fields: [utilisateurId], references: [id])
  utilisateurId String
  created_at    DateTime     @default(now())
  updated_at    DateTime     @default(now()) @updatedAt
}
